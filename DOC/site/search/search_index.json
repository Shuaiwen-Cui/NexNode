{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NexNode","text":"<p>This project dedicates to the development of an EdgeAI-powered MCU level IoT node for future-oriented applications.</p> <p>\"Nex\" is stemmed from both \"Next\" and \"Nexus\", which implies the next generation of IoT devices and the connection between the physical and digital worlds.</p> <p></p>"},{"location":"DNESP32S3/dnesp32s3/","title":"ALIENTEK DNESP32S3","text":""},{"location":"DNESP32S3M/dnesp32s3m/","title":"ALIENTEK DNESP32S3M","text":""},{"location":"FKH743M2-IIT6/fkh743m2-iit6/","title":"FANKE TECH FKH743M2-IIT6","text":""},{"location":"KICK_START/kick_start/","title":"KICK START","text":""},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/","title":"ESP32 DEVELOPMENT ENVIRONMENT SETUP","text":"<p>Tip</p> <p>You are strongly recommended to read the official guide for setting up the development environment before proceeding. The official guide can be found here. </p> <p>Note</p> <p>To start using ESP-IDF on ESP32, install the following software:</p> <ul> <li> <p>Toolchain to compile code for ESP32</p> </li> <li> <p>Build tools - CMake and Ninja to build a full Application for ESP32</p> </li> <li> <p>ESP-IDF that essentially contains API (software libraries and source code) for ESP32 and scripts to  operate the Toolchain</p> </li> </ul> <p></p> <p>Note</p> <p>There are two ways for ESP32 ESP-IDF programming:</p> <ul> <li> <p>Command Line Interface (CLI): fundamental for ESP-IDF programming</p> </li> <li> <p>IDE: easier for beginners</p> </li> </ul>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#windows","title":"WINDOWS","text":""},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#cli","title":"CLI","text":"<ul> <li> <p> How to Install the ESP-IDF Toolchain on Windows (CLI)</p> <p>  Portal </p> </li> </ul>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#ide","title":"IDE","text":"<ul> <li> <p> How to Install the ESP-IDF Toolchain on Windows (VSCode)</p> <p>  Portal </p> </li> </ul>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#linux","title":"LINUX","text":"<p>Tip</p> <p>ESP-IDF is much faster on Linux than on Windows. It is recommended to use Linux for ESP-IDF development.</p>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#cli_1","title":"CLI \ud83c\udfaf","text":"<p>Note</p> <p>There are a total of five steps:</p> <ul> <li> <p>Step 1: Installation Preparation</p> </li> <li> <p>Step 2: Get ESP-IDF</p> </li> <li> <p>Step 3: Set up the Toolchain</p> </li> <li> <p>Step 4: Set up the Build System</p> </li> <li> <p>Step 5: Start Using</p> </li> </ul>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#step-1-installation-preparation","title":"Step 1 - Installation Preparation","text":"<ul> <li>UBUNTU &amp; DEBIAN</li> </ul> <pre><code>sudo apt-get install git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0\n</code></pre> <ul> <li>CENTOS</li> </ul> <pre><code>sudo yum -y update &amp;&amp; sudo yum install git wget flex bison gperf python3 python3-setuptools cmake ninja-build ccache dfu-util libusbx\n</code></pre>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#step-2-get-esp-idf","title":"Step 2 - Get ESP-IDF","text":"<p>Before building applications around the ESP32, obtain the ESP-IDF repository, the software library files provided by Espressif.</p> <p>To get a local copy of ESP-IDF, open the terminal, navigate to the working directory where you want to save ESP-IDF, and clone the remote repository using git clone. See detailed steps for different operating systems below.</p> <p>Open the terminal and run the following commands:</p> <p><pre><code>mkdir -p ~/esp\ncd ~/esp\ngit clone --recursive https://github.com/espressif/esp-idf.git\n</code></pre> ESP-IDF will be downloaded to <code>~/esp/esp-idf</code>.</p> <p>Visit the ESP-IDF Version Overview to check specific applicable scenarios for different ESP-IDF versions.</p>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#step-3-set-up-the-toolchain","title":"Step 3 - Set Up the Toolchain","text":"<p>Besides ESP-IDF itself, various tools used by ESP-IDF, such as compilers, debuggers, and Python packages, must also be installed to support ESP32 projects. <pre><code>cd ~/esp/esp-idf\n./install.sh all\n</code></pre></p>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#step-4-set-up-the-environment-variables","title":"Step 4 - Set Up the Environment Variables","text":"<p>At this stage, the tools you just installed are not yet added to the PATH environment variable, so they cannot be used from the command line. Therefore, some environment variables must be set. This can be done using another script provided by ESP-IDF.</p> <p>Run the following command in the terminal where you need to use ESP-IDF:</p> <pre><code>. $HOME/esp/esp-idf/export.sh\n</code></pre> <p>If you frequently use ESP-IDF, you can create an alias for running export.sh as follows:</p> <p>(1) Open the shell configuration file</p> <pre><code>nano ~/.bashrc\n</code></pre> <p>(2) Copy and paste the following command into your shell configuration file.</p> <pre><code>alias get_idf='. $HOME/esp/esp-idf/export.sh'\n</code></pre> <p>(3) Refresh the configuration file by restarting the terminal or by running <code>source [path to profile]</code>, such as <code>source ~/.bashrc</code>.</p> <p>You can now run <code>get_idf</code> in any terminal window to set up or refresh the ESP-IDF environment.</p> <p>It is not recommended to add <code>export.sh</code> directly to the shell configuration file, as this will activate the IDF virtual environment in every terminal session, including those where ESP-IDF is not needed. This goes against the purpose of using a virtual environment and may interfere with other software.</p>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#ide_1","title":"IDE","text":"<ul> <li> <p> How to Install the ESP-IDF Toolchain on Ubuntu \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  Portal </p> </li> </ul>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#uninstalling-esp-idf","title":"Uninstalling ESP-IDF","text":"<p>(1) Delete the <code>esp</code> directory.</p> <p>First, navigate to the directory where you cloned the ESP-IDF repository and delete the <code>esp</code> directory, typically at <code>~/esp/esp-idf</code>.</p> <pre><code>rm -rf ~/esp/esp-idf\n</code></pre> <p>(2) Remove the toolchain.</p> <p>If you installed the toolchain using the <code>install.sh</code> script, typically in <code>~/.espressif</code>, you can remove it by running the following command:</p> <pre><code>rm -rf ~/.espressif\n</code></pre> <p>(3) Remove the environment variables.</p> <p>If you added an alias to quickly load the ESP-IDF environment variables in your shell configuration file (e.g., <code>~/.bashrc</code> or <code>~/.zshrc</code>), you need to edit these configuration files and remove the alias. You can open and edit the file using the following command:</p> <pre><code>nano ~/.bashrc\n</code></pre> <p>(4) Refresh the configuration file.</p> <p>After removing the alias, refresh the configuration file by running the following command:</p> <pre><code>source ~/.bashrc\n</code></pre>"},{"location":"KICK_START/ESP32/ENVIRONMENT/environment/#vscode-esp-idf-plugin","title":"VSCode ESP-IDF Plugin","text":"<p>Note</p> <p>This is currently one of the most popular ways to develop with ESP-IDF. VSCode is a lightweight code editor that supports multiple programming languages, including C/C++. The ESP-IDF plugin provides full support for ESP-IDF in VSCode, including features like code autocompletion, debugging, building, and flashing.</p> <ol> <li> <p>Install VSCode</p> <p>First, you need to install VSCode. You can download the installer for your operating system here.</p> </li> <li> <p>Install the ESP-IDF Plugin</p> <p>To install the ESP-IDF plugin, follow these steps:</p> <ul> <li>Open VSCode.</li> <li>Click the Extensions icon on the left sidebar.</li> <li>Type \u201cESP-IDF\u201d in the search bar.</li> <li>Click the \u201cInstall\u201d button.</li> </ul> </li> <li> <p>Configure ESP-IDF Path and ESP-IDF Tools Path</p> <p>After installing the ESP-IDF plugin, you need to configure the ESP-IDF path and ESP-IDF tools path. These paths tell the plugin where to find ESP-IDF and its related tools.</p> <ul> <li>Open VSCode.</li> <li>Click the \u201cSettings\u201d icon in the lower left corner.</li> <li>Type \u201cESP-IDF\u201d in the search bar.</li> <li>Enter the paths for ESP-IDF and ESP-IDF tools in the \u201cESP-IDF Path\u201d and \u201cESP-IDF Tools Path\u201d fields. (If they are not already installed, the plugin will automatically download them once the paths are set.)</li> <li>Save the settings.</li> </ul> </li> <li> <p>Create a New Project</p> </li> </ol>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/","title":"HANDS ON","text":""},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#program-preparation","title":"Program Preparation","text":"<p>Find some programs for testing, here, I use the following repository: </p> <pre><code>git clone --recursive https://gitee.com/vi-iot/esp32-board.git\n</code></pre>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#hardware-preparation","title":"Hardware Preparation","text":"<p>Connect the ESP32 development board to the computer</p>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#select-a-program","title":"Select a Program","text":"<p>Enter the repository <code>esp32-board</code> we just downloaded, find a program, such as <code>helloworld</code>, enter the directory:</p> <pre><code>cd esp32-board\ncd helloworld\n</code></pre>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#set-the-development-board-type","title":"Set the Development Board Type","text":"<p>ESP32 Environment Issue</p> <p>Type in <code>get_idf</code> to call the ESP32 environment if you are not currently in the ESP32 environment. Note that, the use of <code>get_idf</code> is only available after you properly set up the alias in the SHELL as indicated in the last tutorial.</p> <p>If it is a general ESP32 development board, you can ignore this step, but if it is another development board, it is better to specify the development board type, such as esp32-s3:</p> <pre><code>idf.py set-target esp32s3\n</code></pre>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#compile-the-program","title":"Compile the Program","text":"<pre><code>idf.py build\n</code></pre>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#flash-the-program","title":"Flash the Program","text":"<pre><code>idf.py flash\n</code></pre> <p>Note that you can view the USB port where the device is located:</p> <pre><code>ls /dev/tty*\n</code></pre> <p>By comparing the linked/non-linked, find the port where the device is located, such as <code>/dev/ttyACM1</code>, and then flash the program:</p> <pre><code>idf.py -p /dev/ttyACM1 flash\n</code></pre>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#monitor-the-program-running","title":"Monitor the Program Running","text":"<pre><code>idf.py monitor\n</code></pre> <p>or you can use a specific port</p> <pre><code>idf.py -p /dev/ttyACM1 monitor\n</code></pre>"},{"location":"KICK_START/ESP32/HANDS-ON/hands-on/#exit-monitoring","title":"Exit Monitoring","text":"<p>Press <code>Ctrl + ]</code> to exit monitoring</p>"},{"location":"KICK_START/ESP32/HARDWARE/hardware/","title":"HARDWARE","text":"<p>Alientek DNESP32S3M Main Control Board</p> <p></p> <p></p> <p>Alientek DNESP32S3 Development Board</p> <p></p> <p></p> <p></p> <p></p> <p>DNESP32S3M/DNESP32S3</p> <p>The hardware platform used in this document is the DNESP32S3M/DNESP32S3 from Alientek\uff0c which is based on ESP32-S3, as shown in the figure above. It should be possible to migrate the relevant programs to other development boards, but adaptation should be made according to the actual situation.</p> <p>DNESP32S3M/DNESP32S3 Hardware Features</p> <p>ESP32-S3 is a system on a chip that integrates the following features:</p> <ul> <li> <p>Wi-Fi (2.4 GHz band)</p> </li> <li> <p>Bluetooth Low Energy</p> </li> <li> <p>Dual high performance Xtensa\u00ae 32-bit LX7 CPU cores</p> </li> <li> <p>Ultra Low Power co-processor running either RISC-V or FSM core</p> </li> <li> <p>Multiple peripherals</p> </li> <li> <p>Built-in security hardware</p> </li> <li> <p>USB OTG interface</p> </li> <li> <p>USB Serial/JTAG Controller</p> </li> </ul> <p>Powered by 40 nm technology, ESP32-S3 provides a robust, highly integrated platform, which helps meet   the continuous demands for efficient power usage, compact design, security, high performance, and     reliability.</p> <p>Espressif provides basic hardware and software resources to help application developers realize their   ideas using the ESP32-S3 series hardware. The software development framework by Espressif is intended     for development of Internet-of-Things (IoT) applications with Wi-Fi, Bluetooth, power management and    several other system features.</p> <p>Note</p> <p>To start programming, you need:</p> <ul> <li> <p>A computer with a USB port</p> </li> <li> <p>A USB cable</p> </li> <li> <p>A DNESP32S3M/DNESP32S3 development board or other ESP32 development board</p> </li> </ul>"},{"location":"KICK_START/ESP32/TEMPLATE/template/","title":"TEMPLATE PROJECT BUILDING-UP","text":""},{"location":"KICK_START/ESP32/TEMPLATE/template/#environment-setup","title":"ENVIRONMENT SETUP","text":"<p>Info</p> <p>We use VSCode + ESP-IDF for development. Details to setup the development environment can be found on the internet. I assume you have already set up the development environment.</p>"},{"location":"KICK_START/ESP32/TEMPLATE/template/#create-a-new-project","title":"CREATE A NEW PROJECT","text":"<ol> <li>Launch VSCode and then open the command palette by pressing <code>Ctrl+Shift+P</code> (Windows/Linux) or <code>Cmd+Shift+P</code> (macOS).</li> <li>Type <code>ESP-IDF: New Project</code> and press <code>Enter</code>. </li> <li>Enter the project configuration UI and fill in the required information. </li> <li>Choose a template to create a new project. </li> <li>Open in a new window.  </li> </ol>"},{"location":"KICK_START/ESP32/TEMPLATE/template/#templated-project-structure","title":"TEMPLATED PROJECT STRUCTURE","text":"<pre><code>sample_proj/ # Project root directory\n\u251c\u2500\u2500 CMakeLists.txt # Project CMake configuration file\n\u251c\u2500\u2500 main/ # Main application directory\n\u2502   \u251c\u2500\u2500 CMakeLists.txt # Application CMake configuration file\n\u2502   \u2514\u2500\u2500 main.c # Application source file\n\u2514\u2500\u2500 sdkconfig # Project configuration file\n</code></pre>"},{"location":"KICK_START/ESP32/TEMPLATE/template/#project-configuration","title":"PROJECT CONFIGURATION","text":"<p>Note</p> <p>This step is to configure the project settings to maximize the power of the hardware, i.e., use target-specific configurations rather than default configurations.</p> <p>Warning</p> <p>Before you open the project configuration UI, make sure you have the project open in VSCode, set the target to your board, and have the ESP-IDF extension installed.</p> <ol> <li>Enter the project configuration UI by pressing <code>Ctrl+Shift+P</code> (Windows/Linux) or <code>Cmd+Shift+P</code> (macOS) and type <code>ESP-IDF: Configure Project</code>. Alternatively, one can click the gear icon on the bottom menu of the VSCode window. </li> <li>'FLASH' configuration. In the search bar, type <code>flash</code> and press <code>Enter</code>.  </li> <li>'Partition Table' configuration. In the search bar, type <code>partition</code> and press <code>Enter</code>.  details to be provided later</li> <li>'PSRAM' configuration. In the search bar, type <code>psram</code> and press <code>Enter</code>. </li> <li>Change the CPU frequency. In the search bar, type <code>cpu</code> and press <code>Enter</code>. Modify the CPU frequency to 240 MHz. </li> <li>Modify the FreeRTOS tick clock frequency. In the search bar, type <code>tick</code> and press <code>Enter</code>. Modify the tick clock frequency to 1000 Hz. </li> <li>Modify the partition table. In the command palette, type <code>ESP-IDF: Open Partition Table Editor UI</code>. </li> <li>Modify the partition table as shown below. </li> <li>Save the all the modifications.</li> </ol> <p>By far, we have finished the project initialization. The configuration is now consistent with the hardware onboard resources. </p>"},{"location":"KICK_START/ESP32/TEMPLATE/template/#template-program","title":"TEMPLATE PROGRAM","text":"<p>Now, let's create a simple program to test the board. </p> <p>Go to the main.c file and the default content is:</p> <p><pre><code>#include &lt;stdio.h&gt;\n\nvoid app_main(void)\n{\n\n}\n</code></pre> replace the content with the following code:</p> <pre><code>#include \"freertos/FreeRTOS.h\"\n#include \"freertos/task.h\"\n#include \"nvs_flash.h\"\n#include \"esp_system.h\"\n#include \"esp_chip_info.h\"\n#include \"esp_psram.h\"\n#include \"esp_flash.h\"\n\n/**\n * @brief Entry point of the program\n * @param None\n * @retval None\n */\nvoid app_main(void)\n{\n    esp_err_t ret;\n    uint32_t flash_size;\n    esp_chip_info_t chip_info;\n\n    // Initialize NVS\n    ret = nvs_flash_init();\n    if (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND)\n    {\n        ESP_ERROR_CHECK(nvs_flash_erase()); // Erase if needed\n        ret = nvs_flash_init();\n    }\n\n    // Get FLASH size\n    esp_flash_get_size(NULL, &amp;flash_size);\n    esp_chip_info(&amp;chip_info);\n\n    // Display CPU core count\n    printf(\"CPU Cores: %d\\n\", chip_info.cores);\n\n    // Display FLASH size\n    printf(\"Flash size: %ld MB flash\\n\", flash_size / (1024 * 1024));\n\n    // Display PSRAM size\n    printf(\"PSRAM size: %d bytes\\n\", esp_psram_get_size());\n\n    while (1)\n    {\n        printf(\"Hello-ESP32\\r\\n\");\n        vTaskDelay(1000);\n    }\n}\n</code></pre> <p>Then, ensure the serial port number is corrrect, the target board is selected, then click the \"fire flame\" icon to build, flash and monitor the program. Then, you should be able to see the printouts on the serial monitor. </p>"},{"location":"KICK_START/ESP32/TEMPLATE/template/#conclusions","title":"CONCLUSIONS","text":"<p>Note</p> <p>This project sets up the minimal system development board DNESP32S3M/DNESP32S3, and this project can serve as a useful template for future development. Compared to STM32, many low level details are hidden from the user, therefore the set up process is much simpler.</p> <p>Tip</p> <p>This template is applicable to both DNESP32S3M and DNESP32S3.</p>"},{"location":"KICK_START/STM32/stm32/","title":"STM32","text":"<p>Coming Soon ... Please Refer the Following Repository First:</p> <ul> <li> <p> MCU_NODE_STM32\ud83c\udfaf\ud83c\udfc6</p> <p>MCU IoT Node with High Performance Edge Computing, Based on STM32</p> <p>  Portal </p> </li> </ul>"},{"location":"ROADMAP/roadmap/","title":"ROADMAP","text":""},{"location":"ROADMAP/roadmap/#architecture","title":"ARCHITECTURE","text":""},{"location":"ROADMAP/roadmap/#layered-architecture","title":"LAYERED ARCHITECTURE","text":"<pre><code>+------------------------------+\n| APPLICATION                  |\n+------------------------------+\n| MIDDLEWARE                   |\n+------------------------------+\n| DRIVERS                      |\n+------------------------------+\n| HARDWARE                     |\n+------------------------------+\n</code></pre>"},{"location":"ROADMAP/roadmap/#system-of-systems","title":"SYSTEM OF SYSTEMS","text":"<pre><code>MAIN CONTROL + PERCEPTION + COMMUNICATION + ACTUATION + POWER\n</code></pre>"},{"location":"ROADMAP/roadmap/#host-mcu","title":"HOST MCU","text":"<ul> <li>ESP32</li> <li>STM32</li> </ul>"},{"location":"ROADMAP/roadmap/#host-dev-boards","title":"HOST DEV BOARDS","text":"<p>ESP32</p> <ul> <li>DNESP32S3M </li> <li>DNESP32S3</li> </ul> <p>STM32</p> <ul> <li>FKH743M2-IIT6</li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"zh/","title":"NexNode","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u81f4\u529b\u4e8e\u4e3a\u9762\u5411\u672a\u6765\u7684\u5e94\u7528\u5f00\u53d1\u4e00\u6b3e\u57fa\u4e8eEdgeAI\u7684MCU\u7ea7IoT\u8282\u70b9\u3002</p> <p>\"Nex\" \u6e90\u81ea \"Next\" \u548c \"Nexus\"\uff0c\u610f\u5473\u7740\u4e0b\u4e00\u4ee3IoT\u8bbe\u5907\u548c\u7269\u7406\u4e16\u754c\u4e0e\u6570\u5b57\u4e16\u754c\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</p> <p></p>"},{"location":"zh/DNESP32S3/dnesp32s3/","title":"\u6b63\u70b9\u539f\u5b50 DNESP32S3 \u5f00\u53d1\u677f","text":""},{"location":"zh/DNESP32S3M/dnesp32s3m/","title":"\u6b63\u70b9\u539f\u5b50 DNESP32S3M \u5f00\u53d1\u677f","text":""},{"location":"zh/FKH743M2-IIT6/fkh743m2-iit6/","title":"\u53cd\u5ba2\u79d1\u6280 FKH743M2-IIT6","text":""},{"location":"zh/KICK_START/kick_start/","title":"\u5feb\u901f\u4e0a\u624b","text":""},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/","title":"ESP32 \u5f00\u53d1\u73af\u5883\u8bbe\u7f6e","text":"<p>Tip</p> <p>\u5728\u7ee7\u7eed\u4e4b\u524d\uff0c\u5f3a\u70c8\u5efa\u8bae\u60a8\u9605\u8bfb\u5b98\u65b9\u6307\u5357\u4ee5\u8bbe\u7f6e\u5f00\u53d1\u73af\u5883\u3002\u5b98\u65b9\u6307\u5357\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u3002</p> <p>Note</p> <p>\u5982\u9700\u5728 ESP32 \u4e0a\u4f7f\u7528 ESP-IDF\uff0c\u8bf7\u5b89\u88c5\u4ee5\u4e0b\u8f6f\u4ef6\uff1a</p> <ul> <li> <p>\u8bbe\u7f6e\u5de5\u5177\u94fe\uff0c\u7528\u4e8e\u7f16\u8bd1 ESP32 \u4ee3\u7801\uff1b</p> </li> <li> <p>\u7f16\u8bd1\u6784\u5efa\u5de5\u5177 \u2014\u2014 CMake\u548cNinja\u7f16\u8bd1\u6784\u5efa\u5de5\u5177\uff0c\u7528\u4e8e\u7f16\u8bd1ESP32\u5e94\u7528\u7a0b\u5e8f\uff1b</p> </li> <li> <p>\u83b7\u53d6ESP-IDF\u8f6f\u4ef6\u5f00\u53d1\u6846\u67b6\u3002\u8be5\u6846\u67b6\u5df2\u7ecf\u57fa\u672c\u5305\u542bESP32\u4f7f\u7528\u7684API\uff08\u8f6f\u4ef6\u5e93\u548c\u6e90\u4ee3\u7801\uff09\u548c\u8fd0\u884c\u5de5\u5177\u94fe\u7684\u811a\u672c\uff1b</p> </li> </ul> <p></p> <p>Note</p> <p>\u6709\u4e24\u79cd ESP32 ESP-IDF \u7f16\u7a0b\u65b9\u5f0f\uff1a</p> <ul> <li> <p>\u547d\u4ee4\u884c\u754c\u9762\uff08CLI\uff09\uff1aESP-IDF \u7f16\u7a0b\u7684\u57fa\u7840\uff1b</p> </li> <li> <p>\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\uff1a\u9002\u5408\u521d\u5b66\u8005\u3002</p> </li> </ul>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#cli","title":"CLI","text":"<ul> <li> <p> How to Install the ESP-IDF Toolchain on Windows (CLI)</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#ide","title":"IDE","text":"<ul> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011\uff5c\u4f7f\u7528\u4e00\u952e\u5b89\u88c5\u5de5\u5177\u5feb\u901f\u642d\u5efa ESP-IDF \u5f00\u53d1\u73af\u5883 (Windows) \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#linux","title":"LINUX","text":"<p>Tip</p> <p>ESP-IDF \u5728 Linux \u4e0a\u6bd4\u5728 Windows \u4e0a\u5feb\u5f97\u591a\u3002\u5efa\u8bae\u4f7f\u7528 Linux \u8fdb\u884c ESP-IDF \u5f00\u53d1\u3002</p>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#cli_1","title":"CLI \ud83c\udfaf","text":"<p>Note</p> <p>\u4e00\u5171\u6709\u4e94\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li> <p>\u7b2c\u4e00\u6b65\uff1a\u5b89\u88c5\u51c6\u5907</p> </li> <li> <p>\u7b2c\u4e8c\u6b65\uff1a\u83b7\u53d6ESP-IDF</p> </li> <li> <p>\u7b2c\u4e09\u6b65\uff1a\u8bbe\u7f6e\u5de5\u5177</p> </li> <li> <p>\u7b2c\u56db\u6b65\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf</p> </li> <li> <p>\u7b2c\u4e94\u6b65\uff1a\u5f00\u59cb\u4f7f\u7528</p> </li> </ul>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#-","title":"\u7b2c\u4e00\u6b65 - \u5b89\u88c5\u51c6\u5907","text":"<ul> <li>UBUNTU &amp; DEBIAN</li> </ul> <pre><code>sudo apt-get install git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0\n</code></pre> <ul> <li>CENTOS</li> </ul> <pre><code>sudo yum -y update &amp;&amp; sudo yum install git wget flex bison gperf python3 python3-setuptools cmake ninja-build ccache dfu-util libusbx\n</code></pre>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#-esp-idf","title":"\u7b2c\u4e8c\u6b65 - \u83b7\u53d6 ESP-IDF","text":"<p>\u5728\u56f4\u7ed5 ESP32 \u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u4e4b\u524d\uff0c\u8bf7\u5148\u83b7\u53d6\u4e50\u946b\u63d0\u4f9b\u7684\u8f6f\u4ef6\u5e93\u6587\u4ef6 ESP-IDF \u4ed3\u5e93\u3002</p> <p>\u83b7\u53d6 ESP-IDF \u7684\u672c\u5730\u526f\u672c\uff1a\u6253\u5f00\u7ec8\u7aef\uff0c\u5207\u6362\u5230\u8981\u4fdd\u5b58 ESP-IDF \u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u4f7f\u7528 git clone \u547d\u4ee4\u514b\u9686\u8fdc\u7a0b\u4ed3\u5e93\u3002\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8be6\u7ec6\u6b65\u9aa4\uff0c\u8bf7\u89c1\u4e0b\u6587\u3002</p> <p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <p><pre><code>mkdir -p ~/esp\ncd ~/esp\ngit clone --recursive https://github.com/espressif/esp-idf.git\n</code></pre> ESP-IDF \u5c06\u4e0b\u8f7d\u81f3 <code>~/esp/esp-idf</code>\u3002</p> <p>\u8bf7\u524d\u5f80ESP-IDF \u7248\u672c\u7b80\u4ecb\uff0c\u67e5\u770b ESP-IDF \u4e0d\u540c\u7248\u672c\u7684\u5177\u4f53\u9002\u7528\u573a\u666f\u3002</p>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#-_1","title":"\u7b2c\u4e09\u6b65 - \u8bbe\u7f6e\u5de5\u5177","text":"<p>\u9664\u4e86 ESP-IDF \u672c\u8eab\uff0c\u8fd8\u9700\u8981\u4e3a\u652f\u6301 ESP32 \u7684\u9879\u76ee\u5b89\u88c5 ESP-IDF \u4f7f\u7528\u7684\u5404\u79cd\u5de5\u5177\uff0c\u6bd4\u5982\u7f16\u8bd1\u5668\u3001\u8c03\u8bd5\u5668\u3001Python \u5305\u7b49\u3002</p> <pre><code>cd ~/esp/esp-idf\n./install.sh all\n</code></pre>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#-_2","title":"\u7b2c\u56db\u6b65 - \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u6b64\u65f6\uff0c\u521a\u521a\u5b89\u88c5\u7684\u5de5\u5177\u5c1a\u672a\u6dfb\u52a0\u81f3 PATH \u73af\u5883\u53d8\u91cf\uff0c\u65e0\u6cd5\u901a\u8fc7\u201c\u547d\u4ee4\u7a97\u53e3\u201d\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u3002\u56e0\u6b64\uff0c\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7 ESP-IDF \u63d0\u4f9b\u7684\u53e6\u4e00\u4e2a\u811a\u672c\u8fdb\u884c\u8bbe\u7f6e\u3002</p> <p>\u8bf7\u5728\u9700\u8981\u8fd0\u884c ESP-IDF \u7684\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>. $HOME/esp/esp-idf/export.sh\n</code></pre> <p>\u5982\u679c\u9700\u8981\u7ecf\u5e38\u8fd0\u884c ESP-IDF\uff0c\u53ef\u4ee5\u4e3a\u6267\u884c export.sh \u521b\u5efa\u4e00\u4e2a\u522b\u540d\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>(1) \u6253\u5f00 shell \u914d\u7f6e\u6587\u4ef6</p> <pre><code>nano ~/.bashrc\n</code></pre> <p>(2) \u590d\u5236\u5e76\u7c98\u8d34\u4ee5\u4e0b\u547d\u4ee4\u5230 shell \u914d\u7f6e\u6587\u4ef6\u4e2d</p> <pre><code>alias get_idf='. $HOME/esp/esp-idf/export.sh'\n</code></pre> <p>(3) \u901a\u8fc7\u91cd\u542f\u7ec8\u7aef\u7a97\u53e3\u6216\u8fd0\u884c <code>source [path to profile]</code>\uff0c\u5982 <code>source ~/.bashrc</code> \u6765\u5237\u65b0\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>\u73b0\u5728\u53ef\u4ee5\u5728\u4efb\u4f55\u7ec8\u7aef\u7a97\u53e3\u4e2d\u8fd0\u884c <code>get_idf</code> \u6765\u8bbe\u7f6e\u6216\u5237\u65b0 ESP-IDF \u73af\u5883\u3002</p> <p>\u4e0d\u5efa\u8bae\u76f4\u63a5\u5c06 <code>export.sh</code> \u6dfb\u52a0\u5230 shell \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u5728\u6bcf\u4e2a\u7ec8\u7aef\u4f1a\u8bdd\u4e2d\u90fd\u6fc0\u6d3b IDF \u865a\u62df\u73af\u5883\uff08\u5305\u62ec\u65e0\u9700\u4f7f\u7528 ESP-IDF \u7684\u4f1a\u8bdd\uff09\u3002\u8fd9\u8fdd\u80cc\u4e86\u4f7f\u7528\u865a\u62df\u73af\u5883\u7684\u76ee\u7684\uff0c\u8fd8\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u8f6f\u4ef6\u7684\u4f7f\u7528\u3002</p>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#-_3","title":"\u7b2c\u4e94\u6b65 - \u5f00\u59cb\u4f7f\u7528","text":"<p>\u8bf7\u53c2\u8003\u5176\u4ed6\u6559\u7a0b\uff0c\u5f00\u59cb\u4f7f\u7528 ESP-IDF\u3002</p>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#ide_1","title":"IDE","text":"<ul> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011\uff5c\u4f7f\u7528 VS Code \u5feb\u901f\u642d\u5efa ESP-IDF \u5f00\u53d1\u73af\u5883 (Windows\u3001Linux\u3001MacOS) \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>Recommended.</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#esp-idf","title":"\u5378\u8f7dESP-IDF","text":"<p>(1) \u5220\u9664 ESP-IDF \u6587\u4ef6\u5939</p> <p>\u9996\u5148\uff0c\u627e\u5230\u5b89\u88c5 ESP-IDF \u7684\u76ee\u5f55\uff08\u901a\u5e38\u5728 <code>~/esp/esp-idf</code>\uff09\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5220\u9664\u8be5\u76ee\u5f55\uff1a</p> <pre><code>rm -rf ~/esp/esp-idf\n</code></pre> <p>(2) \u5220\u9664\u5de5\u5177\u94fe</p> <p>ESP-IDF \u7684 install.sh \u811a\u672c\u4f1a\u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e00\u4e9b\u5de5\u5177\u94fe\u548c\u4f9d\u8d56\uff0c\u901a\u5e38\u4f4d\u4e8e <code>~/.espressif</code> \u76ee\u5f55\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5220\u9664\u8be5\u76ee\u5f55\uff1a</p> <pre><code>rm -rf ~/.espressif\n</code></pre> <p>(3) \u5220\u9664\u73af\u5883\u53d8\u91cf \u5982\u679c\u4f60\u5728 shell \u914d\u7f6e\u6587\u4ef6\uff08\u4f8b\u5982 <code>~/.bashrc</code> \u6216 <code>~/.zshrc</code>\uff09\u4e2d\u6dfb\u52a0\u4e86\u7528\u4e8e\u5feb\u901f\u52a0\u8f7d ESP-IDF \u73af\u5883\u53d8\u91cf\u7684\u522b\u540d\uff08\u5982 <code>get_idf</code>\uff09\uff0c\u5219\u9700\u8981\u7f16\u8f91\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5e76\u5220\u9664\u8be5\u522b\u540d\u3002\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6253\u5f00\u5e76\u7f16\u8f91\u6587\u4ef6</p> <pre><code>nano ~/.bashrc\n</code></pre> <p>(4) \u5237\u65b0\u914d\u7f6e\u6587\u4ef6</p> <p>\u6700\u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u4f7f\u66f4\u6539\u751f\u6548\uff1a</p> <pre><code>source ~/.bashrc\n</code></pre>"},{"location":"zh/KICK_START/ESP32/ENVIRONMENT/environment/#vscode-esp-idf","title":"VSCode ESP-IDF\u63d2\u4ef6","text":"<p>Note</p> <p>\u8fd9\u662f\u5f53\u524d\u6700\u6d41\u884c\u7684ESP-IDF\u5f00\u53d1\u65b9\u5f0f\u4e4b\u4e00\u3002VSCode\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u4ee3\u7801\u7f16\u8f91\u5668\uff0c\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ecC/C++\u3002ESP-IDF\u63d2\u4ef6\u4e3aVSCode\u63d0\u4f9b\u4e86\u5bf9ESP-IDF\u7684\u5b8c\u6574\u652f\u6301\uff0c\u5305\u62ec\u4ee3\u7801\u81ea\u52a8\u5b8c\u6210\u3001\u8c03\u8bd5\u3001\u6784\u5efa\u548c\u70e7\u5f55\u7b49\u529f\u80fd\u3002</p> <ol> <li> <p>\u5b89\u88c5VSCode</p> <p>\u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5VSCode\u3002\u4f60\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4e0b\u8f7d\u9002\u7528\u4e8e\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002</p> </li> <li> <p>\u5b89\u88c5ESP-IDF\u63d2\u4ef6</p> <p>\u5b89\u88c5ESP-IDF\u63d2\u4ef6\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>\u6253\u5f00VSCode\u3002</li> <li>\u70b9\u51fb\u5de6\u4fa7\u7684\u6269\u5c55\u56fe\u6807\u3002</li> <li>\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u201cESP-IDF\u201d\u3002</li> <li>\u70b9\u51fb\u201c\u5b89\u88c5\u201d\u6309\u94ae\u3002</li> </ul> </li> <li> <p>\u914d\u7f6eESP-IDF\u8def\u5f84 \u548c ESP-IDF tools\u8def\u5f84</p> <p>\u5b89\u88c5ESP-IDF\u63d2\u4ef6\u540e\uff0c\u4f60\u9700\u8981\u914d\u7f6eESP-IDF\u8def\u5f84\u548cESP-IDF tools\u8def\u5f84\u3002\u8fd9\u4e9b\u8def\u5f84\u544a\u8bc9\u63d2\u4ef6\u5728\u54ea\u91cc\u627e\u5230ESP-IDF\u548c\u76f8\u5173\u5de5\u5177\u3002</p> <ul> <li>\u6253\u5f00VSCode\u3002</li> <li>\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u201c\u8bbe\u7f6e\u201d\u56fe\u6807\u3002</li> <li>\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u201cESP-IDF\u201d\u3002</li> <li>\u5728\u201cESP-IDF\u8def\u5f84\u201d\u548c\u201cESP-IDF tools\u8def\u5f84\u201d\u5b57\u6bb5\u4e2d\u8f93\u5165ESP-IDF\u548cESP-IDF tools\u7684\u8def\u5f84\u3002\uff08\u5982\u679c\u7535\u8111\u4e0a\u6ca1\u6709\uff0c\u8bbe\u7f6e\u597d\u8def\u5f84\uff0c\u63d2\u4ef6\u4f1a\u81ea\u52a8\u4e0b\u8f7d\uff09</li> <li>\u4fdd\u5b58\u8bbe\u7f6e\u3002</li> </ul> </li> <li> <p>\u521b\u5efa\u65b0\u9879\u76ee</p> </li> </ol>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/","title":"\u4e0a\u624b\u5b9e\u8df5","text":""},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_2","title":"\u7a0b\u5e8f\u51c6\u5907","text":"<p>\u8fd9\u91cc\u6211\u4eec\u627e\u4e00\u4e2a\u5408\u9002\u7684\u8def\u5f84\uff0c\u4e0b\u8f7d\u4e00\u4e9b\u6848\u4f8b\u7a0b\u5e8f\uff1a</p> <pre><code>git clone --recursive https://gitee.com/vi-iot/esp32-board.git\n</code></pre>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_3","title":"\u786c\u4ef6\u51c6\u5907","text":"<p>\u5c06ESP32\u5f00\u53d1\u677f\u4e0e\u7535\u8111\u8fde\u63a5</p>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_4","title":"\u9009\u5b9a\u6848\u4f8b\u7a0b\u5e8f","text":"<p>\u8fdb\u5165\u6211\u4eec\u521a\u521a\u4e0b\u8f7d\u7684\u4ed3\u5e93esp32-board\uff0c\u627e\u5230\u4e00\u4e2a\u6848\u4f8b\u7a0b\u5e8f\uff0c\u6bd4\u5982<code>helloworld</code>\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\uff1a</p> <pre><code>cd esp32-board\ncd helloworld\n</code></pre>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_5","title":"\u8bbe\u5b9a\u5f00\u53d1\u677f\u7c7b\u578b","text":"<p>ESP32\u73af\u5883\u95ee\u9898</p> <p>\u5982\u679c\u4f60\u5f53\u524d\u4e0d\u5728ESP32\u73af\u5883\u4e2d\uff0c\u53ef\u4ee5\u8f93\u5165<code>get_idf</code>\u6765\u8c03\u7528ESP32\u73af\u5883\u3002\u6ce8\u610f\uff0c\u53ea\u6709\u6b63\u786e\u8bbe\u7f6e\u4e86SHELL\u4e2d\u7684\u522b\u540d\u540e\uff0c\u624d\u80fd\u4f7f\u7528<code>get_idf</code>, \u8bf7\u53c2\u8003\u4e0a\u4e00\u7bc7\u6559\u7a0b\u3002</p> <p>\u5982\u679c\u662f\u4e00\u822c\u7684esp32\u5f00\u53d1\u677f\uff0c\u8fd9\u4e00\u6b65\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u7ba1\uff0c\u4f46\u662f\u5982\u679c\u662f\u5176\u4ed6\u5f00\u53d1\u677f\uff0c\u6700\u597d\u6307\u5b9a\u4e00\u4e0b\u5f00\u53d1\u677f\u7c7b\u578b\uff0c\u6bd4\u5982esp32-s3\uff1a</p> <pre><code>idf.py set-target esp32s3\n</code></pre>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_6","title":"\u7f16\u8bd1\u7a0b\u5e8f","text":"<pre><code>idf.py build\n</code></pre>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_7","title":"\u70e7\u5f55\u7a0b\u5e8f","text":"<p><pre><code>idf.py flash\n</code></pre> \u6ce8\u610f\uff0c\u53ef\u4ee5\u67e5\u770b\u8bbe\u5907\u6240\u5728usb\u7aef\u53e3\uff1a</p> <pre><code>ls /dev/tty*\n</code></pre> <p>\u901a\u8fc7\u94fe\u63a5/\u975e\u94fe\u63a5\u5bf9\u6bd4\uff0c\u627e\u5230\u8bbe\u5907\u6240\u5728\u7aef\u53e3\uff0c\u6bd4\u5982<code>/dev/ttyACM1</code>\uff0c\u7136\u540e\u70e7\u5f55\u7a0b\u5e8f\uff1a</p> <pre><code>idf.py -p /dev/ttyACM1 flash\n</code></pre>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_8","title":"\u76d1\u6d4b\u7a0b\u5e8f\u8fd0\u884c","text":"<pre><code>idf.py monitor\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7aef\u53e3\uff1a</p> <pre><code>idf.py -p /dev/ttyACM1 monitor\n</code></pre>"},{"location":"zh/KICK_START/ESP32/HANDS-ON/hands-on/#_9","title":"\u9000\u51fa\u76d1\u6d4b","text":"<p>\u6309\u4e0b<code>Ctrl</code> + <code>]</code>\u5373\u53ef\u9000\u51fa\u76d1\u6d4b\u3002</p>"},{"location":"zh/KICK_START/ESP32/HARDWARE/hardware/","title":"\u786c\u4ef6\u5e73\u53f0","text":"<p>\u6b63\u70b9\u539f\u5b50 DNESP32S3M \u4e3b\u63a7\u677f</p> <p></p> <p></p> <p>\u6b63\u70b9\u539f\u5b50 DNESP32S3 \u5f00\u53d1\u677f</p> <p></p> <p></p> <p></p> <p></p> <p>DNESP32S3M/DNESP32S3</p> <p>\u672c\u6587\u6863\u4f7f\u7528\u7684\u786c\u4ef6\u5e73\u53f0\u4e3a\u6b63\u70b9\u539f\u5b50\u7684DNESP32S3M/DNESP32S3,\u57fa\u4e8eESP32-S3\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u76f8\u5173\u7a0b\u5e8f\u8fc1\u79fb\u5230\u5176\u4ed6\u5f00\u53d1\u677f\u5e94\u8be5\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9002\u914d\u3002</p> <p>DNESP32S3M/DNESP32S3</p> <p>ESP32-S3 SoC \u82af\u7247\u652f\u6301\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li> <p>2.4 GHz Wi-Fi</p> </li> <li> <p>\u4f4e\u529f\u8017\u84dd\u7259</p> </li> <li> <p>\u9ad8\u6027\u80fd Xtensa\u00ae 32 \u4f4d LX7 \u53cc\u6838\u5904\u7406\u5668</p> </li> <li> <p>\u8fd0\u884c RISC-V \u6216 FSM \u5185\u6838\u7684\u8d85\u4f4e\u529f\u8017\u534f\u5904\u7406\u5668</p> </li> <li> <p>\u591a\u79cd\u5916\u8bbe</p> </li> <li> <p>\u5185\u7f6e\u5b89\u5168\u786c\u4ef6</p> </li> <li> <p>USB OTG \u63a5\u53e3</p> </li> <li> <p>USB \u4e32\u53e3/JTAG \u63a7\u5236\u5668</p> </li> </ul> <p>ESP32-S3 \u91c7\u7528 40 nm \u5de5\u827a\u5236\u6210\uff0c\u5177\u6709\u6700\u4f73\u7684\u529f\u8017\u6027\u80fd\u3001\u5c04\u9891\u6027\u80fd\u3001\u7a33\u5b9a\u6027\u3001\u901a\u7528\u6027\u548c\u53ef\u9760\u6027\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u5e94\u7528\u573a\u666f\u548c\u4e0d\u540c\u529f  \u8017\u9700\u6c42\u3002</p> <p>\u4e50\u946b\u4e3a\u7528\u6237\u63d0\u4f9b\u5b8c\u6574\u7684\u8f6f\u3001\u786c\u4ef6\u8d44\u6e90\uff0c\u8fdb\u884c ESP32-S3 \u786c\u4ef6\u8bbe\u5907\u7684\u5f00\u53d1\u3002\u5176\u4e2d\uff0c\u4e50\u946b\u7684\u8f6f\u4ef6\u5f00\u53d1\u73af\u5883 ESP-IDF \u65e8\u5728\u534f\u52a9\u7528\u6237\u5feb \u901f\u5f00\u53d1\u7269\u8054\u7f51 (IoT) \u5e94\u7528\uff0c\u53ef\u6ee1\u8db3\u7528\u6237\u5bf9 Wi-Fi\u3001\u84dd\u7259\u3001\u4f4e\u529f\u8017\u7b49\u65b9\u9762\u7684\u8981\u6c42\u3002</p> <p>Note</p> <p>\u5f00\u59cb\u7f16\u7a0b\u524d\uff0c\u60a8\u9700\u8981\uff1a</p> <ul> <li> <p>\u4e00\u53f0\u5e26\u6709 USB \u7aef\u53e3\u7684\u8ba1\u7b97\u673a</p> </li> <li> <p>\u4e00\u6839 USB \u6570\u636e\u7ebf</p> </li> <li> <p>\u4e00\u5757 DNESP32S3M/DNESP32S3 \u5f00\u53d1\u677f\u6216\u5176\u4ed6 ESP32 \u5f00\u53d1\u677f</p> </li> </ul>"},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/","title":"\u6a21\u677f\u9879\u76ee\u642d\u5efa","text":""},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/#_2","title":"\u73af\u5883\u51c6\u5907","text":"<p>Info</p> <p>\u6211\u4eec\u4f7f\u7528 VSCode + ESP-IDF \u8fdb\u884c\u5f00\u53d1\u3002\u6709\u5173\u8bbe\u7f6e\u5f00\u53d1\u73af\u5883\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230\u3002\u6211\u5047\u8bbe\u60a8\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/#_3","title":"\u521b\u5efa\u65b0\u9879\u76ee","text":"<ol> <li>\u542f\u52a8 VSCode\uff0c\u7136\u540e\u901a\u8fc7\u6309 <code>Ctrl+Shift+P</code>\uff08Windows/Linux\uff09\u6216 <code>Cmd+Shift+P</code>\uff08macOS\uff09\u6253\u5f00\u547d\u4ee4\u9762\u677f\u3002</li> <li>\u8f93\u5165 <code>ESP-IDF: New Project</code> \u5e76\u6309 <code>Enter</code>\u3002 </li> <li>\u8fdb\u5165\u9879\u76ee\u914d\u7f6e UI \u5e76\u586b\u5199\u6240\u9700\u4fe1\u606f\u3002 </li> <li>\u9009\u62e9\u4e00\u4e2a\u6a21\u677f\u6765\u521b\u5efa\u65b0\u9879\u76ee\u3002 </li> <li>\u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u3002  </li> </ol>"},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/#_4","title":"\u6a21\u677f\u5316\u9879\u76ee\u7ed3\u6784","text":"<pre><code>sample_proj/ # \u9879\u76ee\u6839\u76ee\u5f55\n\u251c\u2500\u2500 CMakeLists.txt # \u9879\u76ee CMake \u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 main/ # \u4e3b\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\n\u2502   \u251c\u2500\u2500 CMakeLists.txt # \u5e94\u7528\u7a0b\u5e8f CMake \u914d\u7f6e\u6587\u4ef6\n\u2502   \u2514\u2500\u2500 main.c # \u5e94\u7528\u7a0b\u5e8f\u6e90\u6587\u4ef6\n\u2514\u2500\u2500 sdkconfig # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n</code></pre>"},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/#_5","title":"\u9879\u76ee\u914d\u7f6e","text":"<p>Note</p> <p>\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u914d\u7f6e\u9879\u76ee\u8bbe\u7f6e\u4ee5\u6700\u5927\u5316\u786c\u4ef6\u7684\u6027\u80fd\uff0c\u5373\u4f7f\u7528\u7279\u5b9a\u4e8e\u76ee\u6807\u7684\u914d\u7f6e\u800c\u4e0d\u662f\u9ed8\u8ba4\u914d\u7f6e\u3002</p> <p>Warning</p> <p>\u5728\u6253\u5f00\u9879\u76ee\u914d\u7f6e UI \u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u5728 VSCode \u4e2d\u6253\u5f00\u4e86\u9879\u76ee\uff0c\u5c06\u76ee\u6807\u8bbe\u7f6e\u4e3a\u5bf9\u5e94\u7684\u677f\u5b50\uff0c\u5e76\u5b89\u88c5\u4e86 ESP-IDF \u6269\u5c55\u3002</p> <ol> <li>\u901a\u8fc7\u6309 <code>Ctrl+Shift+P</code>\uff08Windows/Linux\uff09\u6216 <code>Cmd+Shift+P</code>\uff08macOS\uff09\u5e76\u8f93\u5165 <code>ESP-IDF: Configure Project</code> \u8fdb\u5165\u9879\u76ee\u914d\u7f6e UI\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u70b9\u51fb VSCode \u7a97\u53e3\u5e95\u90e8\u83dc\u5355\u7684\u9f7f\u8f6e\u56fe\u6807\u3002 </li> <li>'FLASH' \u914d\u7f6e\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>flash</code> \u5e76\u6309 <code>Enter</code>\u3002 </li> <li>'Partition Table' \u914d\u7f6e\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>partition</code> \u5e76\u6309 <code>Enter</code>\u3002  \u8be6\u7ec6\u4fe1\u606f\u7a0d\u540e\u63d0\u4f9b</li> <li>'PSRAM' \u914d\u7f6e\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>psram</code> \u5e76\u6309 <code>Enter</code>\u3002 </li> <li>\u66f4\u6539 CPU \u9891\u7387\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>cpu</code> \u5e76\u6309 <code>Enter</code>\u3002\u5c06 CPU \u9891\u7387\u4fee\u6539\u4e3a 240 MHz\u3002 </li> <li>\u4fee\u6539 FreeRTOS tick \u65f6\u949f\u9891\u7387\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>tick</code> \u5e76\u6309 <code>Enter</code>\u3002\u5c06\u9891\u7387\u4fee\u6539\u4e3a 1000\u3002 </li> <li>\u4fee\u6539\u5206\u533a\u8868\u3002\u5728\u547d\u4ee4\u9762\u677f\u4e2d\u8f93\u5165 <code>ESP-IDF: Open Partition Table Editor UI</code>\u3002 </li> <li>\u4fee\u6539\u5206\u533a\u8868\u5982\u4e0b\u6240\u793a\u3002 </li> <li>\u4fdd\u5b58\u6240\u6709\u4fee\u6539\u3002</li> </ol> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u9879\u76ee\u521d\u59cb\u5316\u3002\u914d\u7f6e\u4fe1\u606f\u73b0\u5728\u4e0e\u786c\u4ef6\u677f\u4e0a\u8d44\u6e90\u4e00\u81f4\u3002</p>"},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/#_6","title":"\u6a21\u677f\u7a0b\u5e8f","text":"<p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\u6765\u6d4b\u8bd5\u677f\u5b50\u3002</p> <p>\u8f6c\u5230 main.c \u6587\u4ef6, \u9ed8\u8ba4\u5185\u5bb9\u662f\uff1a</p> <p><pre><code>#include &lt;stdio.h&gt;\n\nvoid app_main(void)\n{\n\n}\n</code></pre> \u7528\u4ee5\u4e0b\u4ee3\u7801\u66ff\u6362\uff1a</p> <pre><code>#include \"freertos/FreeRTOS.h\"\n#include \"freertos/task.h\"\n#include \"nvs_flash.h\"\n#include \"esp_system.h\"\n#include \"esp_chip_info.h\"\n#include \"esp_psram.h\"\n#include \"esp_flash.h\"\n\n/**\n * @brief Entry point of the program\n * @param None\n * @retval None\n */\nvoid app_main(void)\n{\n    esp_err_t ret;\n    uint32_t flash_size;\n    esp_chip_info_t chip_info;\n\n    // Initialize NVS\n    ret = nvs_flash_init();\n    if (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND)\n    {\n        ESP_ERROR_CHECK(nvs_flash_erase()); // Erase if needed\n        ret = nvs_flash_init();\n    }\n\n    // Get FLASH size\n    esp_flash_get_size(NULL, &amp;flash_size);\n    esp_chip_info(&amp;chip_info);\n\n    // Display CPU core count\n    printf(\"CPU Cores: %d\\n\", chip_info.cores);\n\n    // Display FLASH size\n    printf(\"Flash size: %ld MB flash\\n\", flash_size / (1024 * 1024));\n\n    // Display PSRAM size\n    printf(\"PSRAM size: %d bytes\\n\", esp_psram_get_size());\n\n    while (1)\n    {\n        printf(\"Hello-ESP32\\r\\n\");\n        vTaskDelay(1000);\n    }\n}\n</code></pre> <p>\u7136\u540e\uff0c\u786e\u4fdd\u4e32\u53e3\u6b63\u786e\uff0c\u677f\u5b50\u8bbe\u7f6e\u6b63\u786e\uff0c\u7136\u540e\u7f16\u8bd1\u5e76\u70e7\u5f55\u7a0b\u5e8f\u3002\u7136\u540e\uff0c\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u4e32\u53e3\u8f93\u51fa\u663e\u793a\u5f00\u53d1\u677f\u4fe1\u606f\u548c <code>Hello-ESP32</code> \u6d88\u606f\u3002</p>"},{"location":"zh/KICK_START/ESP32/TEMPLATE/template/#_7","title":"\u7ed3\u8bba","text":"<p>Note</p> <p>\u8fd9\u4e2a\u9879\u76ee\u5bf9DNESP32S3M/DNESP32S3\u8fdb\u884c\u4e86\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e3a\u540e\u7eed\u5f00\u53d1\u63d0\u4f9b\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6a21\u677f\u3002\u76f8\u6bd4\u8f83\u4e0eSTM32\uff0cESP32\u7684\u5f00\u53d1\u9690\u85cf\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u540c\u65f6\u4e5f\u4f7f\u5f97\u8bbe\u7f6e\u6d41\u7a0b\u66f4\u52a0\u7b80\u5355\u3002</p> <p>Tip</p> <p>\u8fd9\u4e2a\u6a21\u677f\u5bf9DNESP32S3M\u548cDNESP32S3\u4e24\u4e2a\u677f\u5b50\u90fd\u9002\u7528\u3002</p>"},{"location":"zh/KICK_START/STM32/stm32/","title":"STM32","text":"<p>\u5373\u5c06\u63a8\u51fa ... \u8bf7\u5148\u53c2\u8003\u4ee5\u4e0b\u4ed3\u5e93:</p> <ul> <li> <p> MCU_NODE_STM32\ud83c\udfaf\ud83c\udfc6</p> <p>\u57fa\u4e8e STM32 \u7684 MCU IoT \u8282\u70b9\uff0c\u5177\u6709\u9ad8\u6027\u80fd\u8fb9\u7f18\u8ba1\u7b97</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ROADMAP/roadmap/","title":"\u8def\u7ebf\u56fe","text":""},{"location":"zh/ROADMAP/roadmap/#_2","title":"\u67b6\u6784","text":""},{"location":"zh/ROADMAP/roadmap/#_3","title":"\u5206\u5c42\u67b6\u6784","text":"<pre><code>+------------------------------+\n| \u5e94\u7528\u5c42                        |\n+------------------------------+\n| \u4e2d\u95f4\u4ef6                        |\n+------------------------------+\n| \u9a71\u52a8\u5c42                        |\n+------------------------------+\n| \u786c\u4ef6\u5c42                        |\n+------------------------------+\n</code></pre>"},{"location":"zh/ROADMAP/roadmap/#_4","title":"\u529f\u80fd\u6a21\u5757","text":"<pre><code>\u4e3b\u63a7 + \u611f\u77e5 + \u901a\u4fe1 + \u6267\u884c + \u7535\u6e90\n</code></pre>"},{"location":"zh/ROADMAP/roadmap/#_5","title":"\u5fae\u63a7\u5236\u5668","text":"<ul> <li>ESP32</li> <li>STM32</li> </ul>"},{"location":"zh/ROADMAP/roadmap/#_6","title":"\u5f00\u53d1\u677f","text":"<p>ESP32</p> <ul> <li>DNESP32S3M </li> <li>DNESP32S3</li> </ul> <p>STM32</p> <ul> <li>FKH743M2-IIT6</li> </ul>"}]}